[{"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\index.js":"1","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\App.js":"2","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskList.js":"3","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\datas\\ListTache.js":"4","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskItems.js":"5","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskFormulaire.js":"6","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskNavigation.js":"7","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskCalendrier.js":"8"},{"size":241,"mtime":1709238440573,"results":"9","hashOfConfig":"10"},{"size":267,"mtime":1709395811890,"results":"11","hashOfConfig":"10"},{"size":1917,"mtime":1709744903504,"results":"12","hashOfConfig":"10"},{"size":167,"mtime":1709292069016,"results":"13","hashOfConfig":"10"},{"size":5403,"mtime":1709739516188,"results":"14","hashOfConfig":"10"},{"size":4877,"mtime":1709738147707,"results":"15","hashOfConfig":"10"},{"size":1301,"mtime":1709741099829,"results":"16","hashOfConfig":"10"},{"size":4011,"mtime":1709736163103,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"u07f8a",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\index.js",[],["38","39"],"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\App.js",[],"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskList.js",["40"],"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\datas\\ListTache.js",["41"],"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskItems.js",["42","43","44"],"﻿import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/TaskItems.css';\r\n\r\nfunction TaskItems({ tasks, fetchData, selectedTaskCalendar, setSelectedTaskCalendar }) {\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n  async function handleCompletedTask(idChange, changeTask) {\r\n    try {\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append('id', idChange);\r\n      formData.append('completed', changeTask);\r\n\r\n      const response = await axios.post(\r\n        'http://localhost:8000/backend/api/update_checkbox.php',\r\n        formData,\r\n        { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        console.log('Enregistrement mis à jour avec succès');\r\n        fetchData();\r\n      } else {\r\n        console.error('Erreur lors de la mise à jour de l\\'enregistrement:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la requête:', error);\r\n    }\r\n  }\r\n\r\n  async function deleteTask(idTask){\r\n     try{\r\n      \r\n\r\n      const response = await axios.delete(\r\n        `http://localhost:8000/backend/api/delete_task.php?id=${idTask}`,\r\n        { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        console.log('Tache supprimé avec succès');\r\n        fetchData();\r\n      } else {\r\n        console.error('Erreur lors de la supression', response.statusText);\r\n      }\r\n\r\n    }catch(error){\r\n      console.error('Erreur lors de la requête:', error);\r\n\r\n    }\r\n  }\r\n\r\n  function formatToFrenchDateFormat(dateStr) {\r\n    // Diviser la date en année, mois et jour\r\n    const [year, month, day] = dateStr.split('-');\r\n\r\n    // Réorganiser les parties de la date pour le format français\r\n    const formattedDate = `${day}-${month}-${year}`;\r\n\r\n    // Formater la date au format français\r\n    const [frenchYear, frenchMonth, frenchDay] = formattedDate.split('-');\r\n    const months = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'];\r\n    const monthIndex = parseInt(frenchMonth) - 1;\r\n    const monthName = months[monthIndex];\r\n    const formattedFrenchDate = `${frenchDay}  ${monthName} ${frenchYear} `;\r\n\r\n    return formattedFrenchDate;\r\n}\r\n\r\n\r\n//Filtre pour obtenir les taches d'aujourd'hui\r\n  const currentDate = new Date().toISOString().split('T')[0];\r\n\r\n  const tasksOfTheDay = tasks.filter(task => task.date === currentDate)\r\n\r\n// Affiche 'Tâches du jour' lorsque selectedTaskCalendar est vide et filteredTasks est vide\r\nconst titleCase1 = !selectedTaskCalendar  ? 'Tâches du jour' : '';\r\n\r\n\r\n\r\n// Affiche 'Liste de tâches au <date>' lorsque selectedTaskCalendar n'est pas vide\r\nconst titleCase3 = selectedTaskCalendar ? `Liste de tâches au : ${formatToFrenchDateFormat(selectedTaskCalendar)}` : '';\r\n\r\n// Combinez les cas pour obtenir le titre final\r\nconst title = titleCase1 || titleCase3;\r\n\r\n\r\n\r\n    console.log(tasks);\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <div className=\"task-list\">\r\n        \r\n        \r\n      {title && <h3>{title}</h3>}\r\n\r\n\r\n            {(selectedTaskCalendar ? tasks : tasksOfTheDay).length === 0 ? (\r\n          <h3>Aucune tâche  pour aujourd'hui.</h3>\r\n        ) : null}\r\n\r\n        \r\n\r\n        {(selectedTaskCalendar ? tasks : tasksOfTheDay).map(({ id, title, description, auteur, dateFr, completed }) => \r\n        \r\n        !selectedTaskCalendar || selectedTaskCalendar === dateFr ?(\r\n\r\n          \r\n  \r\n\r\n            <div key={id} className={`task-item ${completed ? 'completed validated' : ''}`}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`task-checkbox-${id}`}\r\n                className=\"task-checkbox\"\r\n                checked={completed}\r\n                onChange={(e) => handleCompletedTask(id, e.target.checked)}\r\n              />\r\n            \r\n                <label htmlFor={`task-checkbox-${id}`} className=\"task-checkbox-label\">\r\n                      \r\n                      <span className=\"checkbox-label\">{completed === 1 ?'Fait' : 'Tache à realiser'}</span>\r\n                      <span className=\"checkbox-custom\"></span>\r\n                      \r\n                    \r\n                  </label>\r\n              \r\n\r\n              \r\n              {completed === 1 ?\r\n\r\n                  <button className=\"delete-button\" onClick={ () => deleteTask(id)}>\r\n                      <span className=\"delete-icon\">×</span>\r\n                  </button>\r\n                \r\n              : null}\r\n              \r\n              <div className=\"task-info\">\r\n              \r\n\r\n                <p className=\"task-label\"><b>Titre :</b> <u>{title}</u></p>\r\n                <p className=\"task-label\"><b>Description : </b></p>\r\n                <p className=\"task-description\">{description}</p>\r\n                  <div className=\"container-dateAuteur\">\r\n                    <p className=\"task-label auteurdate\"><b>publié par {auteur} </b></p>\r\n                    <p className=\"task-label auteurdate\"><b>Au :</b> {dateFr ? formatToFrenchDateFormat(dateFr) : \"Date non précisée\"} </p>\r\n\r\n\r\n                  </div>\r\n                \r\n                \r\n              </div>\r\n            </div>\r\n                \r\n        ):null\r\n        \r\n        )}\r\n      </div>\r\n  </div>\r\n  \r\n\r\n  );\r\n}\r\n\r\nexport default TaskItems;\r\n","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskFormulaire.js",["45","46","47"],"﻿import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport '../styles/TaskFormulaire.css';\r\n\r\nfunction TaskFormulaire({ fetchData, isComponentVisible, setIsComponentVisible }) {\r\n    const [taskDescription, setTaskDescription] = useState(\"\");\r\n    const [taskTitle, setTaskTitle] = useState(\"\");\r\n    const [taskAuteur, setTaskAuteur] = useState(\"\");\r\n    const [taskDate, setTaskDate] = useState(0);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Réinitialiser les erreurs\r\n        setErrors({});\r\n\r\n        // Vérifier la longueur maximale des champs\r\n        const newErrors = {};\r\n        if (taskTitle.length > 255) {\r\n            newErrors.title = \"Le titre ne peut pas dépasser 255 caractères\";\r\n        }\r\n        if (taskDescription.length > 255) {\r\n            newErrors.description = \"La description ne peut pas dépasser 255 caractères\";\r\n        }\r\n    \r\n\r\n        if (taskAuteur.length > 255) {\r\n            newErrors.description = \"L'auteur ne peut pas dépasser 255 caractères\";\r\n        }\r\n\r\n        if (!taskTitle  || !taskDescription || !taskAuteur || taskDate === 0){\r\n            newErrors.vides =\"l'un de vos champs est vide ou sont vides\";\r\n        }\r\n\r\n        // Vérifier les injections SQL\r\n        const sqlPattern = /(\\b(SELECT|INSERT|UPDATE|DELETE|CREATE|DROP|ALTER)\\b)|(\\-\\-)/i;\r\n        if (sqlPattern.test(taskTitle) || sqlPattern.test(taskDescription)) {\r\n            newErrors.sqlInjection = \"La saisie contient des caractères non autorisés\";\r\n        }\r\n\r\n        // Vérifier les attaques XSS\r\n        const xssPattern = /<script>|<\\/script>|<style>|<\\/style>|<img>|<iframe>|<svg>|<\\/svg>/i;\r\n        if (xssPattern.test(taskTitle) || xssPattern.test(taskDescription)) {\r\n            newErrors.xssAttack = \"La saisie contient des caractères non autorisés\";\r\n        }\r\n\r\n        // Mettre à jour les erreurs\r\n        setErrors(newErrors);\r\n\r\n        // Si aucune erreur, soumettre le formulaire\r\n        if (Object.keys(newErrors).length === 0) {\r\n\r\n            try {\r\n                const formData = { title: taskTitle, description: taskDescription, auteur: taskAuteur, date: taskDate };\r\n                await axios.post('http://localhost:8000/backend/api/insert_task.php', formData);\r\n                fetchData(); // Met à jour la liste des tâches après l'ajout\r\n                setTaskTitle(\"\"); // Réinitialise le champ de texte\r\n                setTaskDescription(\"\");\r\n                setTaskAuteur(\"\");\r\n                setTaskDate(0);\r\n            } catch (error) {\r\n                console.error('Erreur lors de la requête:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n     \r\n             \r\n            <form onSubmit={handleSubmit} className=\"task-form\">\r\n                \r\n                <h3>📝 Formulaire d'ajout de tache 📝 </h3>\r\n\r\n                {errors.sqlInjection && <span className=\"error\">{errors.sqlInjection}</span>}\r\n                {errors.xssAttack && <span className=\"error\">{errors.xssAttack}</span>}\r\n                {errors.vides && <span className=\"error\">{errors.vides}</span>}\r\n                <label>Auteur: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"task-input\"\r\n                    placeholder=\"Préciser l'auteur\"\r\n                    value={taskAuteur}\r\n                    onChange={(e) => setTaskAuteur(e.target.value)}\r\n                />\r\n                \r\n                <label>Titre : </label>\r\n                {errors.title && <span className=\"error\">{errors.title}</span>}\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"task-input\"\r\n                    placeholder=\"Préciser le titre\"\r\n                    value={taskTitle}\r\n                    onChange={(e) => setTaskTitle(e.target.value)}\r\n                />\r\n                <label>Date : </label>\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"task-input\"\r\n                    value={taskDate}\r\n                    onChange={(e) => setTaskDate(e.target.value)}\r\n                />\r\n                <label>Description : </label>\r\n                {errors.description && <span className=\"error\">{errors.description}</span>}\r\n                <textarea\r\n                    className=\"task-input\"\r\n                    placeholder=\"Ajouter une nouvelle tâche\"\r\n                    value={taskDescription}\r\n                    onChange={(e) => setTaskDescription(e.target.value)}\r\n                />\r\n                \r\n\r\n\r\n                \r\n                <button className=\"task-button\" type=\"submit\">Valider</button>\r\n            </form>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskFormulaire;\r\n","C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskNavigation.js",["48"],"C:\\Users\\cleme\\Bureau\\to-do-list\\to_do_list\\src\\components\\TaskCalendrier.js",["49","50"],"﻿import { useState, useEffect } from \"react\";\r\nimport '../styles/TaskCalendrier.css';\r\nfunction TaskCalendrier({selectedTaskCalendar, setSelectedTaskCalendar, tasks, setFilteredTasks}) {\r\n    \r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\r\n\r\n    const months = [\r\n        'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n        'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n    ];\r\n\r\n    const getDaysInMonth = (month, year) => {\r\n        return new Date(year, month + 1, 0).getDate();\r\n    };\r\n\r\n    const getStartDayOfMonth = (month, year) => {\r\n        return new Date(year, month, 1).getDay();\r\n    };\r\n\r\n    function formatToFrenchDateFormat(dateStr) {\r\n        // Diviser la date en année, mois et jour\r\n        const [year, month, day] = dateStr.split('-');\r\n    \r\n        // Réorganiser les parties de la date pour le format français\r\n        const formattedDate = `${day.padStart(2, '0')}-${month.padStart(2, '0')}-${year}`;\r\n    \r\n        return formattedDate;\r\n    }\r\n    \r\n   \r\n\r\n\r\n    const generateCalendar = () => {\r\n        const daysInMonth = getDaysInMonth(selectedMonth, selectedYear);\r\n        const startDayOfMonth = getStartDayOfMonth(selectedMonth, selectedYear);\r\n        const firstDayPosition = startDayOfMonth === 0 ? 6 : startDayOfMonth - 1;\r\n    \r\n        const rows = Array.from({ length: 6 }, (_, i) => {\r\n            return Array.from({ length: 7 }, (_, j) => {\r\n                const dayCounter = i * 7 + j - firstDayPosition + 1;\r\n                const date = `${selectedYear}-${(selectedMonth + 1).toString().padStart(2, '0')}-${dayCounter.toString().padStart(2, '0')}`;\r\n                const formattedDate = formatToFrenchDateFormat(date); \r\n                if (dayCounter <= 0 || dayCounter > daysInMonth) {\r\n                    return <td key={j} className=\"empty-day disabled\" onClick={(e) => e.preventDefault()}></td>;\r\n                } else {\r\n                    return <td key={j} className=\"date-cell\" data-date={formattedDate}>{dayCounter}</td>;\r\n                }\r\n            });\r\n        });\r\n    \r\n        return (\r\n            <table className=\"calendar\">\r\n                \r\n                <thead>\r\n                    <tr>\r\n                        \r\n                        <th>Dim</th>\r\n                        <th>Lun</th>\r\n                        <th>Mar</th>\r\n                        <th>Mer</th>\r\n                        <th>Jeu</th>\r\n                        <th>Ven</th>\r\n                        <th>Sam</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map((cells, i) => <tr key={i} onClick={(e) => setSelectedTaskCalendar(e.target.dataset.date) }>{cells}</tr>)}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n  \r\n    \r\n   \r\n\r\n\r\n    return (\r\n        <div className=\"TaskCalendrier\">\r\n             <div className=\"calendrier-input\">\r\n            <h3> 📆 Sélectioner le mois du calendrier 📆</h3>\r\n            <select value={selectedMonth} onChange={(e) => setSelectedMonth(parseInt(e.target.value))}>\r\n                {months.map((month, index) => <option key={index} value={index}>{month}</option>)}\r\n            </select>\r\n            <h3>📅 Sélectioner l'année du calendrier 📅</h3>\r\n            <input\r\n                type=\"number\"\r\n                value={selectedYear}\r\n                onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n                min={1900} // Année minimale\r\n                max={2100} // Année maximale\r\n                step={1} // Incrément\r\n            />\r\n            </div>\r\n            \r\n            <div className=\"calendar-title\">\r\n                <h2>{months[selectedMonth]} {selectedYear}</h2>\r\n             </div>\r\n            \r\n            {generateCalendar()}\r\n\r\n           \r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskCalendrier;\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","fix":"59"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","fix":"60"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","fix":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":1,"column":21,"nodeType":"64","messageId":"65","endLine":1,"endColumn":29},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","fix":"67"},{"ruleId":"68","severity":1,"message":"69","line":37,"column":84,"nodeType":"70","messageId":"71","endLine":37,"endColumn":85,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":37,"column":86,"nodeType":"70","messageId":"71","endLine":37,"endColumn":87,"suggestions":"73"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","fix":"74"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","fix":"75"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":20,"nodeType":"64","messageId":"65","endLine":1,"endColumn":29},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"78","text":"79"},{"range":"80","text":"79"},{"range":"81","text":"79"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",{"range":"82","text":"79"},"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["83","84"],["85","86"],{"range":"87","text":"79"},{"range":"88","text":"79"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],{"messageId":"89","fix":"90","desc":"91"},{"messageId":"92","fix":"93","desc":"94"},{"messageId":"89","fix":"95","desc":"91"},{"messageId":"92","fix":"96","desc":"94"},[-1,0],[-1,0],"removeEscape",{"range":"97","text":"79"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"98","text":"99"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"100","text":"79"},{"range":"101","text":"99"},[1402,1403],[1402,1402],"\\",[1404,1405],[1404,1404]]